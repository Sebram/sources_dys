/*DYS doyourslide
 * Principale.java
 *
 * Created on 4 juin 2015, 20:26:31
 * Copyright © <2015>  <Sebastien Abraham Koné ("Sebram")>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Contact <Sebastien Abraham Koné ("Sebram")> doyourslide@gmail.com
 */

package Dys.reveals;


import Dys.impress.ImpressOpenedSlideEdit;
import Dys.impress.ImpressSlide;
import Dys.impress.ImpressSlideEdit;
import Dys.impress.iSlideForm;
import Dys.impress.iProject;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author Sebastien Koné skonemailbox@gmail.com
 */
public class Principale extends javax.swing.JFrame {
    
    private String projectname;
    
    private revSlideEdit slidedit;
    
    /** 
     * Principal desktop and functionalities .
     */
    public Principale() {
    
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        btnFermerProjet.setVisible(false);
        
        jPanel3.setVisible(false);
        
        panelProjectList.setVisible(false);
        
        logo.setVisible(true);
    
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        iconNewPro = new javax.swing.JLabel();
        iconNewSlide = new javax.swing.JLabel();
        iconOpenBrowser = new javax.swing.JLabel();
        iconOpenProj = new javax.swing.JLabel();
        iconHelp = new javax.swing.JLabel();
        iconQuitter = new javax.swing.JLabel();
        labelDysTitle = new javax.swing.JLabel();
        panelProjectList = new javax.swing.JPanel();
        comboSlideList = new javax.swing.JComboBox();
        btnFermerProjet = new javax.swing.JToggleButton();
        labelTitleOpened = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        labelInfo = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuInfo = new javax.swing.JMenuItem();
        menuQuitter = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        menuNewSlide = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 8));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        iconNewPro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NEWPROJ.png"))); // NOI18N
        iconNewPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconNewPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconNewProMouseClicked(evt);
            }
        });

        iconNewSlide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/EDIT64.png"))); // NOI18N
        iconNewSlide.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconNewSlide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconNewSlideMouseClicked(evt);
            }
        });

        iconOpenBrowser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BROWSER64.png"))); // NOI18N
        iconOpenBrowser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconOpenBrowser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconOpenBrowserMouseClicked(evt);
            }
        });

        iconOpenProj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/OPEN64.png"))); // NOI18N
        iconOpenProj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconOpenProj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconOpenProjMouseClicked(evt);
            }
        });

        iconHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/INFO64.png"))); // NOI18N
        iconHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                iconHelpMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconHelpMouseClicked(evt);
            }
        });

        iconQuitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/QUITTER.png"))); // NOI18N
        iconQuitter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconQuitter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconQuitterMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(iconHelp)
                    .add(iconOpenBrowser)
                    .add(iconOpenProj)
                    .add(iconNewSlide)
                    .add(iconNewPro))
                .addContainerGap())
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(iconQuitter)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(iconNewPro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(iconNewSlide)
                .add(18, 18, 18)
                .add(iconOpenProj)
                .add(18, 18, 18)
                .add(iconOpenBrowser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(iconHelp)
                .add(18, 18, 18)
                .add(iconQuitter)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        labelDysTitle.setFont(new java.awt.Font("Futura", 1, 64));
        labelDysTitle.setForeground(new java.awt.Color(255, 255, 255));
        labelDysTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dys-text-logo512.png"))); // NOI18N

        panelProjectList.setBackground(new java.awt.Color(255, 255, 255));
        panelProjectList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 102), 3, true));

        String [] titres = new String[Project.slideList.size()];
        for(int i = 0;i<Project.slideList.size();i++){
            titres[i]=Project.slideList.get(i).slidetitle;
            //    ---     System.out.println("////////: "+titres[i]);
        }
        comboSlideList.setModel(new javax.swing.DefaultComboBoxModel(titres));
        comboSlideList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboSlideList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboSlideListMouseClicked(evt);
            }
        });
        comboSlideList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSlideListActionPerformed(evt);
            }
        });
        comboSlideList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comboSlideListFocusGained(evt);
            }
        });

        btnFermerProjet.setBackground(new java.awt.Color(0, 153, 0));
        btnFermerProjet.setFont(new java.awt.Font("Arial", 0, 14));
        btnFermerProjet.setForeground(new java.awt.Color(51, 51, 51));
        btnFermerProjet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/CLOSE24.png"))); // NOI18N
        btnFermerProjet.setText("Fermer le projet");
        btnFermerProjet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFermerProjet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFermerProjetActionPerformed(evt);
            }
        });

        labelTitleOpened.setFont(new java.awt.Font("Arial Black", 0, 18));
        labelTitleOpened.setForeground(new java.awt.Color(214, 133, 51));
        String p = "Projet: "+Project.projectName;
        labelTitleOpened.setText(p);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel1.setText("Projet:");

        jLabel3.setText("Titre des slides:");

        org.jdesktop.layout.GroupLayout panelProjectListLayout = new org.jdesktop.layout.GroupLayout(panelProjectList);
        panelProjectList.setLayout(panelProjectListLayout);
        panelProjectListLayout.setHorizontalGroup(
            panelProjectListLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelProjectListLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelProjectListLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(labelTitleOpened, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                    .add(comboSlideList, 0, 610, Short.MAX_VALUE)
                    .add(jLabel1)
                    .add(jLabel3)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, btnFermerProjet, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 192, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelProjectListLayout.setVerticalGroup(
            panelProjectListLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelProjectListLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(4, 4, 4)
                .add(labelTitleOpened, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jLabel3)
                .add(4, 4, 4)
                .add(comboSlideList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 63, Short.MAX_VALUE)
                .add(btnFermerProjet)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("X");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        labelInfo.setFont(new java.awt.Font("Arial", 2, 14));
        labelInfo.setForeground(new java.awt.Color(0, 153, 0));
        labelInfo.setText("Vous pouvez désormais créer des slides!");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .add(labelInfo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 370, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(124, 124, 124)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(labelInfo)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo-dys-icon128.png"))); // NOI18N
        logo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(panelProjectList, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(labelDysTitle)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(logo)
                        .add(8, 8, 8)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(logo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelDysTitle))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelProjectList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(57, 57, 57)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jMenu1.setText("DoYourSlide");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        menuInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/INFO24.png"))); // NOI18N
        menuInfo.setText("Info");
        menuInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInfoActionPerformed(evt);
            }
        });
        jMenu1.add(menuInfo);

        menuQuitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/QUIT24.png"))); // NOI18N
        menuQuitter.setText("Quitter");
        menuQuitter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuQuitter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuQuitterMouseClicked(evt);
            }
        });
        menuQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuQuitterActionPerformed(evt);
            }
        });
        jMenu1.add(menuQuitter);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editer");
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NEWPROJ24.png"))); // NOI18N
        jMenuItem3.setText("Nouveau projet");
        jMenuItem3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        menuNewSlide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NEWSLIDE24.png"))); // NOI18N
        menuNewSlide.setText("Créer un nouveau slide");
        menuNewSlide.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuNewSlide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewSlideActionPerformed(evt);
            }
        });
        jMenu2.add(menuNewSlide);

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/OPEN24.png"))); // NOI18N
        jMenuItem5.setText("Ouvrir un projet");
        jMenuItem5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BROWSER24.png"))); // NOI18N
        jMenuItem6.setText("Afficher dans le navigateur");
        jMenuItem6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    /**
     * Quitter l'application.
     * @param evt 
     */         
    private void btnFermerProjetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFermerProjetActionPerformed
        
        String message  = "Souhaitez-vous vraiment fermer le projet?";
        
        String title = "Fermer le projet";
        
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        
        if (reply == JOptionPane.YES_OPTION)
        {   
            
            // ON VIDE TOUS !                        
            
            this.setVisible(false);
          
            new Principale().setVisible(true); // Now this will open NewJFrame for you again and will also get refreshed 
                      
            Project.setState(true); Project.state = true; 
            
            iProject.setState(true); iProject.state = true;
            
            iSlideForm.setEditState(false);
            
            revSlideEdit.savestate = false;
            
            btnFermerProjet.setVisible(false);
            
            Project.liste_titre = new ArrayList<String>();
            
            iProject.liste_titre = new ArrayList<String>();
            
            Project.slideList = new ArrayList<Slide>();
            
            Project.slideList2 = new ArrayList<Slide>();
            
            iProject.slideList = new ArrayList<ImpressSlide>();
            
            iProject.newSlideList = new ArrayList<ImpressSlide>();
            
            Project.projectName=null; Project.setProjectName(null);
            
            Project.projectName2=null;
            
            iProject.iprojectName=null; iProject.setIprojectName(null);
            
            Project.themeName=null;                        
            
            String [] vide = new String [1];
            vide[0]="";
            
            comboSlideList.setModel(new javax.swing.DefaultComboBoxModel(vide));
            
            btnFermerProjet.setVisible(false); 
            
            panelProjectList.setVisible(false);  
            
            jPanel3.setVisible(false);
            
            this.dispose();
            
            Progress Prgs = new Progress();            
                                            
        }
        else if(reply == JOptionPane.NO_OPTION){
        
            Project.setState(false);
            
            iProject.setState(false);
            
            jPanel3.setVisible(true);
            
            labelInfo.setText( "*** Projet en cours: "+ Project.projectName.toUpperCase()+". ***");
        }
       
        
    }//GEN-LAST:event_btnFermerProjetActionPerformed

    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        jPanel3.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Open a slide from list, to edit slide.
     */
    private void comboSlideListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSlideListActionPerformed
         
        Progress Prgs = new Progress();
          
         if(!Project.state){
        
             if(comboSlideList.getSelectedIndex() >= 0)            
             {
                 slidedit = new revSlideEdit(new javax.swing.JFrame(), true);

                 slidedit.setVisible(true);  

                 slidedit.addWindowListener(new java.awt.event.WindowAdapter() {
                    
                     @Override
                    
                     public void windowClosing(java.awt.event.WindowEvent e) {
                     
                         dispose();                    
                    
                     }
                
                 });                
             }
         }
         
         if(!iProject.state)
         {
             
            if(comboSlideList.getSelectedIndex() >= 0)
            {
                 ImpressSlideEdit.setEditState(true);                                
                
                 ImpressSlideEdit impressform = new ImpressSlideEdit(new javax.swing.JFrame(), true);

                 impressform.setVisible(true);  

                 impressform.addWindowListener(new java.awt.event.WindowAdapter() {
                 
                     @Override
                    
                     public void windowClosing(java.awt.event.WindowEvent e) {
                     
                         dispose();                    
                    
                     }
                
                 });                
             }
         }
    }//GEN-LAST:event_comboSlideListActionPerformed

    private void comboSlideListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboSlideListMouseClicked
         
        
    }//GEN-LAST:event_comboSlideListMouseClicked

    /**
     * 
     * Actualise la liste des slides.
     * @param evt 
     */
    private void comboSlideListFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboSlideListFocusGained
        
        if(revSlideEdit.savestate == true) // to refresh edit menu REVEALS project
         {         
             
            String [] titres = new String[Project.slideList2.size()];
            
            for(int i = 0;i<Project.slideList2.size();i++){
            
                titres[i]=Project.slideList2.get(i).slidetitle;                
            }           
            
            comboSlideList.setModel(new javax.swing.DefaultComboBoxModel(titres));
         
        }    
        
        if(ImpressSlideEdit.savestate == true) // to refresh edit menu REVEALS project         
        {         
             
            String [] titres = new String[iProject.newSlideList.size()];
            
            for(int i = 0;i<iProject.newSlideList.size();i++){
            
                titres[i]=iProject.newSlideList.get(i).title;                
            
            }           
            
            comboSlideList.setModel(new javax.swing.DefaultComboBoxModel(titres));
         }
        
        
    }//GEN-LAST:event_comboSlideListFocusGained

    /**
     * ouvre le slide de doc dans le navigateur.
     * @param evt 
     */
    private void iconHelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconHelpMouseClicked
       
        File indexfile = new File("doc/index.html");
        
        try {
        
            Desktop desk = Desktop.getDesktop();
            
            if(indexfile.exists()) desk.open(indexfile);                                            
            
        } catch (IOException ex) {
        
            Logger.getLogger(revSlideEdit.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }//GEN-LAST:event_iconHelpMouseClicked

    /**
     * ouvre le projet  en cours dans le navigateur.
     * @param evt 
     */
    private void iconOpenBrowserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconOpenBrowserMouseClicked
                
        if(revSlideEdit.isClosed){ jPanel3.setVisible(false); }
        
        if(Project.projectName!=null){
                    
            File indexfile = new File(Project.mydeskpath+"/Dys_projects/"+Project.projectName+"/index.html");
            
            try {
            
                Desktop desk = Desktop.getDesktop();
                
                if(indexfile.exists()) desk.open(indexfile);
                
                } catch (IOException ex) {
                
                    Logger.getLogger(Principale.class.getName()).log(Level.SEVERE, null, ex);
                
                }
        }
        else if(iProject.iprojectName!=null){
             
            File indexfile = new File(iProject.desktop+"/Dys_projects/"+iProject.iprojectName+"/index.html");
            
            try {
            
                Desktop desk = Desktop.getDesktop();
                
                if(indexfile.exists()) desk.open(indexfile);

                } catch (IOException ex) {

                    Logger.getLogger(Principale.class.getName()).log(Level.SEVERE, null, ex);
                
                }
        }
        
        else
        {
            labelInfo.setText( "*** Aucun projet n'est ouvert ou en cours d'édition! ***");
            
            jPanel3.setVisible(true);
        
        }
    }//GEN-LAST:event_iconOpenBrowserMouseClicked

    /**
     * Ouvre la page d'édition d'un nouveau slide.
     * @param evt 
     */
    private void iconNewSlideMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconNewSlideMouseClicked
        
        System.out.println(Project.projectName);
        
        System.out.println(iProject.iprojectName);
        
        if(Project.projectName != null )
        {
            SlideForm dialog = new SlideForm(new javax.swing.JFrame(), true);

            dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {

                    dispose();

                }

            });

            dialog.setVisible(true);  
             //*    ajout des items dans la combobox des titres de slide
            String [] titres = new String[Project.slideList.size()];

            for(int i = 0;i<Project.slideList.size();i++){

                titres[i]=Project.slideList.get(i).slidetitle;                

            }           

            comboSlideList.setModel(new javax.swing.DefaultComboBoxModel(titres));            

        }

        if( iProject.iprojectName != null)
        {
            iSlideForm impress = new iSlideForm(new javax.swing.JFrame(), true);

            impress.addWindowListener(new java.awt.event.WindowAdapter() {

                @Override

                public void windowClosing(java.awt.event.WindowEvent e) {

                    dispose();

                }

            });
            iProject.setState(false);

            iSlideForm.setEditState(false);

            iSlideForm.setEditOpenedState(false);

            impress.setVisible(true); 

            String [] titres = new String[iProject.slideList.size()];

            for(int i = 0;i<iProject.slideList.size();i++){

                titres[i]=iProject.slideList.get(i).title;                

            }           

            comboSlideList.setModel(new javax.swing.DefaultComboBoxModel(titres));  
        }
        
        if(Project.projectName == null && iProject.iprojectName == null)
        {
             labelInfo.setText( "*** Vous devez créer projet, pour créer un slide! ***");
         
             jPanel3.setVisible(true);            
        
        }
        
        
        /*
        
        if(Project.projectName!=null && (CreaDir.getLibrary() == 1 || Project.projectName!=null && CreaDir.getLibrary() == 0))  // REVEALS
        {            
            SlideForm dialog = new SlideForm(new javax.swing.JFrame(), true);
            
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                
                    dispose();
                
                }
            
            });
            
            dialog.setVisible(true);  
             //*    ajout des items dans la combobox des titres de slide
            String [] titres = new String[Project.slideList.size()];
            
            for(int i = 0;i<Project.slideList.size();i++){
            
                titres[i]=Project.slideList.get(i).slidetitle;                
            
            }           
            
            comboSlideList.setModel(new javax.swing.DefaultComboBoxModel(titres));            
            
            Project.setState(false);
            
        }        
        else if(iProject.iprojectName!=null && CreaDir.getLibrary() == 2) // IMPRESS  
        {            // Si le nom du projet n'est pas vide et que la librairie sélectionné est impress.js (2 dans la liste)
                    // Alors on lance la page d'edition de slide impress
            
            iSlideForm impress = new iSlideForm(new javax.swing.JFrame(), true);
            
            impress.addWindowListener(new java.awt.event.WindowAdapter() {
            
                @Override
                
                public void windowClosing(java.awt.event.WindowEvent e) {
                
                    dispose();
                
                }
            
            });
            iProject.setState(false);
            
            iSlideForm.setEditState(false);
            
            iSlideForm.setEditOpenedState(false);
            
            impress.setVisible(true); 
                        
            String [] titres = new String[iProject.slideList.size()];
            
            for(int i = 0;i<iProject.slideList.size();i++){
            
                titres[i]=iProject.slideList.get(i).title;                
            
            }           
            
            comboSlideList.setModel(new javax.swing.DefaultComboBoxModel(titres));          
        
        }
        
        else
        {
             labelInfo.setText( "*** Vous devez créer projet, pour créer un slide! ***");
         
             jPanel3.setVisible(true);            
        
        }*/
        
    }//GEN-LAST:event_iconNewSlideMouseClicked
    
    /**
     * Creation d'un nouveau projet.
     * @param evt 
     */
    private void iconNewProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconNewProMouseClicked
        // Creation d'un projet avec CreaDir:
        if(Project.getState()  || iProject.getState()){  // Si pas de projet ouvert en cours !
        
            CreaDir newproject = new CreaDir(new javax.swing.JFrame(), true);
            
            newproject.addWindowListener(new java.awt.event.WindowAdapter() {
            
                @Override
                
                public void windowClosing(java.awt.event.WindowEvent e) {
                
                    dispose();
                
                }
            
            });            
            
            newproject.setVisible(true);
                        
            if( Project.projectName != null){            //REVEALS     
            
                labelTitleOpened.setText(Project.projectName.toUpperCase()); 
                
                panelProjectList.setVisible(true); 
                
                btnFermerProjet.setVisible(true);
                
                jPanel3.setVisible(true);
                
                labelInfo.setText( "*** Projet en cours: "+ Project.projectName.toUpperCase()+". ***");
            
            }
            
            if(iProject.iprojectName != null){      // IMPRESS         
            
                labelTitleOpened.setText(iProject.iprojectName.toUpperCase()); 
                
                panelProjectList.setVisible(true); 
                
                btnFermerProjet.setVisible(true);
                
                jPanel3.setVisible(true);
                
                labelInfo.setText( "*** Projet en cours: "+ iProject.iprojectName.toUpperCase()+". ***");
            }
        }
        
        else if((!Project.getState()) || (!iProject.getState())){                        
            
            labelInfo.setText( "***  Un projet est déjà en cours d'édition !  ***");
            
            jPanel3.setVisible(true);            
        }                 
    }//GEN-LAST:event_iconNewProMouseClicked

    
    /**
     * Rechercher et ouverture d'un projet existant.
     * @param evt 
     */
    private void iconOpenProjMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconOpenProjMouseClicked
              
        
        if(Project.getState() == true && iProject.getState() == true){ // Si aucun projet n'est deja ouvert, alors on appelle la fenetre de creation de projet           
            
            Progress progrs = new Progress();
            
            ChooseDysFile cf = new ChooseDysFile(new javax.swing.JFrame(), true);
                      
            cf.setVisible(true);
            
        }
        else if(Project.getState() == false || iProject.getState() == false){   
        
            labelInfo.setText( "*** Un projet est déjà en cours d'édition! ***");
            
            jPanel3.setVisible(true);            
       
        }   
                       
    }//GEN-LAST:event_iconOpenProjMouseClicked
    
    private void menuQuitterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuQuitterMouseClicked
        
        if(!Project.getState() || !iProject.getState()){                        
        
            labelInfo.setText( "*** Un projet est en cours d'édition ! ***");
            
            jPanel3.setVisible(true);
        }
        else
        
            System.exit(0);   
    }//GEN-LAST:event_menuQuitterMouseClicked

    
    private void menuQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuQuitterActionPerformed
    
        if(!Project.getState() || !iProject.getState()){                        
        
            labelInfo.setText( "*** Un projet est en cours d'édition ! ***");
            
            jPanel3.setVisible(true);
        }
        else
        
            System.exit(0);   
    }//GEN-LAST:event_menuQuitterActionPerformed

    private void iconQuitterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconQuitterMouseClicked
    
        if(!Project.getState() || !iProject.getState()){                           
        
            labelInfo.setText( "*** Un projet est en cours d'édition ! ***");
            
            jPanel3.setVisible(true);
        }
        else
        
            System.exit(0);  
    }//GEN-LAST:event_iconQuitterMouseClicked

    private void logoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoMouseClicked
        
        if(!Project.getState() || !iProject.getState()){                        
        
            labelInfo.setText( "*** Un projet est en cours d'édition ! ***");
            
            jPanel3.setVisible(true);
        }
        else
        
            System.exit(0);
    }//GEN-LAST:event_logoMouseClicked

    private void menuInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInfoActionPerformed
         
        File indexfile = new File("doc/index.html");
        
        try {
        
            Desktop desk = Desktop.getDesktop();
            
            if(indexfile.exists()) desk.open(indexfile);                                            
            
        }
        catch (IOException ex) {
        
            Logger.getLogger(revSlideEdit.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }//GEN-LAST:event_menuInfoActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
     
        // Creation d'un projet avec CreaDir:
        
        if(Project.getState() || iProject.getState()){  // Si pas de projet ouvert en cours !
        
            CreaDir newproject = new CreaDir(new javax.swing.JFrame(), true);
            
            newproject.addWindowListener(new java.awt.event.WindowAdapter() {
            
                @Override
                
                public void windowClosing(java.awt.event.WindowEvent e) {
                
                    dispose();
                }
            
            });            
            
            newproject.setVisible(true);
            
            if(CreaDir.creadir_state){
            
                labelTitleOpened.setText(Project.projectName.toUpperCase()); 
                
                panelProjectList.setVisible(true);             
                
                btnFermerProjet.setVisible(true);
                
                jPanel3.setVisible(true);
                
                labelInfo.setText( "*** Projet en cours: "+ Project.projectName.toUpperCase()+". ***");
            }            
        }
        else if(!Project.getState() || !iProject.getState()){                        
            
            labelInfo.setText( "***  Un projet est déjà en cours d'édition !  ***");
            
            jPanel3.setVisible(true);            
        }    
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void menuNewSlideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewSlideActionPerformed
        
        if(Project.projectName!=null){
        
            
            SlideForm dialog = new SlideForm(new javax.swing.JFrame(), true);
            
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            
                @Override
                
                public void windowClosing(java.awt.event.WindowEvent e) {
                
                    dispose();
                
                }
            
            });
            
            dialog.setVisible(true);
            
            //*    ajout des items dans la combobox des titres de slide
            
            String [] titres = new String[Project.slideList.size()];
            
            for(int i = 0;i<Project.slideList.size();i++){
            
                titres[i]=Project.slideList.get(i).slidetitle;                
            
            }           
            
            comboSlideList.setModel(new javax.swing.DefaultComboBoxModel(titres));
            
            
            //*
        }
        else if(iProject.iprojectName!=null){
            
            iSlideForm dialog = new iSlideForm(new javax.swing.JFrame(), true);
            
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            
                @Override
                
                public void windowClosing(java.awt.event.WindowEvent e) {
                
                    dispose();
                
                }
            
            });
            
            dialog.setVisible(true);
            
            //*    ajout des items dans la combobox des titres de slide
            
            String [] titres = new String[iProject.slideList.size()];
            
            for(int i = 0;i<iProject.slideList.size();i++){
            
                titres[i]=iProject.slideList.get(i).title;                
            
            }           
            
            comboSlideList.setModel(new javax.swing.DefaultComboBoxModel(titres));
        
        }
        
        else{
        
            labelInfo.setText( "*** Vous devez créer projet, pour créer un slide! ***");
            
            jPanel3.setVisible(true);            
        
        }
    }//GEN-LAST:event_menuNewSlideActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        
        if(Project.getState() == true || iProject.getState() == true){ // Si aucun projet n'est deja ouvert, alors on appelle la fenetre de creation de projet
            
            Progress progrs = new Progress();
        
            ChooseDysFile cf = new ChooseDysFile(new javax.swing.JFrame(), true);
                       
            cf.setVisible(true);
            
        }
        else if(Project.getState() == false || iProject.getState() == false){   
        
            labelInfo.setText( "*** Un projet est déjà en cours d'édition! ***");
            
            jPanel3.setVisible(true);            
        
        }                
                
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        
        if(revSlideEdit.isClosed)
        { 
        
            jPanel3.setVisible(false); 
        
        }
        
        if(Project.projectName!=null || iProject.iprojectName!=null)        
        {
            if(Project.projectName!=null )
            {
                     File indexfile = new File(Project.mydeskpath+"/Dys_projects/"+Project.projectName+"/index.html");
        
                     try {
                    
                         Desktop desk = Desktop.getDesktop();
                     
                         if(indexfile.exists()) desk.open(indexfile);

                    } catch (IOException ex) {
                        
                        Logger.getLogger(Principale.class.getName()).log(Level.SEVERE, null, ex);
                    
                    }
             }
            
            else if(iProject.iprojectName!=null){
                    
                File indexfile = new File(iProject.desktop+"/Dys_projects/"+iProject.iprojectName+"/index.html");
                     
                try {
                
                    Desktop desk = Desktop.getDesktop();
                    
                    if(indexfile.exists()) desk.open(indexfile);
                   
                    } catch (IOException ex) {

                        Logger.getLogger(Principale.class.getName()).log(Level.SEVERE, null, ex);
                    
                    }
                
            }
        }
        else
        {
            
            labelInfo.setText( "*** Aucun projet n'est ouvert ou en cours d'édition! ***");
        
            jPanel3.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void iconHelpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconHelpMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_iconHelpMouseReleased

        
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnFermerProjet;
    private javax.swing.JComboBox comboSlideList;
    private javax.swing.JLabel iconHelp;
    private javax.swing.JLabel iconNewPro;
    private javax.swing.JLabel iconNewSlide;
    private javax.swing.JLabel iconOpenBrowser;
    private javax.swing.JLabel iconOpenProj;
    private javax.swing.JLabel iconQuitter;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelDysTitle;
    private javax.swing.JLabel labelInfo;
    private javax.swing.JLabel labelTitleOpened;
    private javax.swing.JLabel logo;
    private javax.swing.JMenuItem menuInfo;
    private javax.swing.JMenuItem menuNewSlide;
    private javax.swing.JMenuItem menuQuitter;
    private javax.swing.JPanel panelProjectList;
    // End of variables declaration//GEN-END:variables
}
