/*
 * EditSlideImpress.java
 *
 * Created on 28 juin 2015, 13:46:36
 * 
 * * Copyright © <2015>  <Sebastien Abraham Koné ("Sebram")>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Contact <Sebastien Abraham Koné ("Sebram")> doyourslide@gmail.com
 */
package Dys.impress;

import Dys.reveals.Brackets;
import Dys.reveals.CopyDirectory;
import Dys.reveals.Progress;
import Dys.reveals.Project;
import Dys.reveals.SlideForm;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Sebram
 */
public class iSlideForm extends javax.swing.JDialog {
    
    private static boolean editstate;
    private static boolean editOpenedstate;
    private static boolean addstate;
    public static boolean backstate;

   
    private String selectedtext;
    private String img;
    private Color colorChooser;
    private int R;
    private int G;
    private int B;
    private String bg;
    /**
     * Used in principal to get indice from the slide menu
     */
    public static int indiceSlide;
    /** Creates new form EditSlideImpress */
    public iSlideForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jComboBox1.setVisible(false);
        btnInfo.setVisible(false);        
        jLabel13.setText(iProject.iprojectName);
        int n1 = jSlider1.getValue();
        fieldPosX.setText(""+n1);
        int n2 = jSlider2.getValue();
        fieldPosY.setText(""+n2);
        int n3 = jSlider3.getValue();
        fieldRotate.setText(""+n3);
        int n4 = jSlider4.getValue();
        fieldRotaX.setText(""+n4);
        int n5 = jSlider5.getValue();
        fieldRotaY.setText(""+n5);
        int n6 = jSlider6.getValue();
        fieldScale.setText(""+n6);
                                                      
            
            titre.setText("EDITER UN SLIDE DANS LE PROJET: ");
                        
       
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titre = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldSlideTitle = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnInfo = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jSlider1 = new javax.swing.JSlider(jSlider1.HORIZONTAL, -8000, 8000, 0);
        jLabel5 = new javax.swing.JLabel();
        jSlider2 = new javax.swing.JSlider(-8000,8000,0);
        jLabel6 = new javax.swing.JLabel();
        fieldPosX = new javax.swing.JTextField();
        fieldPosY = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSlider3 = new javax.swing.JSlider(-360,360,0);
        fieldRotate = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jSlider4 = new javax.swing.JSlider(-360,360,0);
        jLabel11 = new javax.swing.JLabel();
        jSlider5 = new javax.swing.JSlider(-360,360,0);
        jLabel12 = new javax.swing.JLabel();
        jSlider6 = new javax.swing.JSlider(-10, 10, 0);
        fieldRotaX = new javax.swing.JTextField();
        fieldRotaY = new javax.swing.JTextField();
        fieldScale = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jSlider7 = new javax.swing.JSlider(-500,500,0);
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(600, 32767));
        jPanel1.setPreferredSize(new java.awt.Dimension(646, 730));

        titre.setText("EDITER UN SLIDE");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel3.setText("Titre du slide");

        fieldSlideTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel4.setText("Texte");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextArea1MouseReleased(evt);
            }
        });
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        btnInfo.setFont(new java.awt.Font("Arial", 0, 14));
        btnInfo.setForeground(new java.awt.Color(255, 153, 0));
        btnInfo.setText("?");
        btnInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfoActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 14));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  "Choisissez une balise", "section", "a", "b", "button", "cite", "div", "em", "form",  "h1", "h2", "h3", "p", "ul", "li", "img", "input", "label", "legend", "pre", "code", "script", "select", "option", "span", "strong", "style", "table", "tbody", "td", "th", "textarea", "video" }));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jSlider1.setMajorTickSpacing(100);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider1MouseDragged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel5.setText("Position X");

        jSlider2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider2MouseDragged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel6.setText("Position Y");

        fieldPosX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPosXActionPerformed(evt);
            }
        });

        fieldPosY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPosYActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Arial", 0, 14));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "500", "1000", "1500", "2000", "2500", "3000", "3500", "4000", "4500", "5000" }));
        jComboBox2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel7.setText("Temps de transitions:");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel8.setText("Rotate");

        jSlider3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider3MouseDragged(evt);
            }
        });

        fieldRotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldRotateActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 14));
        jCheckBox1.setText("Autoplay");
        jCheckBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel10.setText("Rotate-X");

        jSlider4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider4MouseDragged(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel11.setText("Rotate-Y");

        jSlider5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider5MouseDragged(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel12.setText("Scale");

        jSlider6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider6MouseDragged(evt);
            }
        });

        fieldRotaX.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fieldRotaX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldRotaXActionPerformed(evt);
            }
        });

        fieldRotaY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldRotaYActionPerformed(evt);
            }
        });

        fieldScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldScaleActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Arial", 0, 18));
        jLabel13.setForeground(new java.awt.Color(255, 153, 0));

        jTextField2.setFont(new java.awt.Font("Arial", 0, 14));
        jTextField2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel1.setText("Entrez un 'id' spécifique si vous le souhaiter:");

        jLabel14.setFont(new java.awt.Font("Arial", 2, 12));
        jLabel14.setText("(Sans le '#' !)");

        jLabel15.setText("Position Z");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jSlider7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider7MouseDragged(evt);
            }
        });

        jButton1.setText("Background-color");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Background-image");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jToggleButton1.setFont(new java.awt.Font("Arial", 0, 14));
        jToggleButton1.setForeground(new java.awt.Color(255, 153, 51));
        jToggleButton1.setText("?");
        jToggleButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addContainerGap(350, Short.MAX_VALUE))
            .add(jPanel1Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jLabel3)
                .addContainerGap(548, Short.MAX_VALUE))
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(250, 250, 250)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel8)
                            .add(jLabel10)
                            .add(jLabel11))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(fieldRotaY, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, fieldRotate)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, fieldRotaX, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel6)
                            .add(jLabel15))
                        .add(21, 21, 21)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(fieldPosX)
                            .add(fieldPosY)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))))
                .add(65, 65, 65)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jLabel12)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fieldScale, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(47, 47, 47)))
                .add(731, 731, 731))
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel4))
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jLabel14)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jToggleButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 248, Short.MAX_VALUE)
                                        .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 191, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(btnInfo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                                .add(fieldSlideTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 193, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(28, 28, 28)
                                .add(jCheckBox1)
                                .add(52, 52, 52)
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(743, 743, 743))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jSlider2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 174, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSlider7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 18, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(jSlider5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSlider4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSlider3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jSlider6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(720, 720, 720))))
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(titre)
                .add(18, 18, 18)
                .add(jLabel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 185, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(321, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(titre)
                    .add(jLabel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(93, 93, 93)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(fieldSlideTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7)
                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jCheckBox1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(2, 2, 2)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel14)
                            .add(jToggleButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(65, 65, 65))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(btnInfo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(43, 43, 43)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel5)
                                .add(fieldPosX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel8)
                                .add(fieldRotate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(jLabel12)
                                .add(fieldScale, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(45, 45, 45)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(fieldPosY, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(fieldRotaX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(37, 37, 37)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(69, 69, 69)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSlider3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSlider6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(jLabel6)
                            .add(jLabel10))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jSlider2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel15)
                                    .add(jTextField1))
                                .add(2, 2, 2)
                                .add(jSlider7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jSlider4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel11)
                                    .add(fieldRotaY))
                                .add(jSlider5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .add(68, 68, 68))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo-dys-icon128.png"))); // NOI18N

        btnSave.setFont(new java.awt.Font("Arial", 0, 14));
        btnSave.setText("Enregistrer");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Arial", 0, 14));
        btnClose.setText("Fermer");
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Nanum Brush Script", 0, 36));
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("& Impress.js!");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.CENTER, jLabel2)
                    .add(org.jdesktop.layout.GroupLayout.CENTER, jLabel9)
                    .add(btnSave, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, btnClose, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel9)
                .add(34, 34, 34)
                .add(btnSave, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(115, 115, 115)
                .add(btnClose, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(307, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 650, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * 
     * @param b 
     */ 
    public static void setEditState(boolean b) {
        editstate = b;
    }
    public static boolean getEditState() {
        return editstate;
    }
    
    public static void setEditOpenedState(boolean b) {
        editOpenedstate = b;
    }
    public static boolean getEditOpenedState() {
        return editOpenedstate;
    }
    
    public static void setAddingState(boolean bool) {
        iSlideForm.addstate = bool;
    }
    
    private static boolean getAddingState() {
         return iSlideForm.addstate;
    }
    
    private void jSlider1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseDragged
       int n = jSlider1.getValue();
       fieldPosX.setText(""+n);
    }//GEN-LAST:event_jSlider1MouseDragged

    private void jSlider2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider2MouseDragged
        int n = jSlider2.getValue();
       fieldPosY.setText(""+n);
    }//GEN-LAST:event_jSlider2MouseDragged

    private void fieldPosXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPosXActionPerformed
        String txtvalue = fieldPosX.getText();
        int t = Integer.parseInt(txtvalue);
        jSlider1.setValue(t);
    }//GEN-LAST:event_fieldPosXActionPerformed

    private void fieldPosYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPosYActionPerformed
        String txtvalue = fieldPosY.getText();
        int t = Integer.parseInt(txtvalue);
        jSlider2.setValue(t);
    }//GEN-LAST:event_fieldPosYActionPerformed

    private void fieldRotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldRotateActionPerformed
        String txtvalue = fieldRotate.getText();
        int t = Integer.parseInt(txtvalue);
        jSlider3.setValue(t);
    }//GEN-LAST:event_fieldRotateActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void fieldRotaYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldRotaYActionPerformed
        String txtvalue = fieldRotaY.getText();
        int t = Integer.parseInt(txtvalue);
        jSlider5.setValue(t);
    }//GEN-LAST:event_fieldRotaYActionPerformed

    private void fieldRotaXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldRotaXActionPerformed
        String txtvalue = fieldRotaX.getText();
        int t = Integer.parseInt(txtvalue);
        jSlider4.setValue(t);
    }//GEN-LAST:event_fieldRotaXActionPerformed

    private void jSlider3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider3MouseDragged
        int n = jSlider3.getValue();
       fieldRotate.setText(""+n);
    }//GEN-LAST:event_jSlider3MouseDragged

    private void jSlider4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider4MouseDragged
        int n = jSlider4.getValue();
       fieldRotaX.setText(""+n);
    }//GEN-LAST:event_jSlider4MouseDragged

    private void jSlider5MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider5MouseDragged
        int n = jSlider5.getValue();
       fieldRotaY.setText(""+n);
    }//GEN-LAST:event_jSlider5MouseDragged

    private void fieldScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldScaleActionPerformed
          String txtvalue = fieldScale.getText();
        int t = Integer.parseInt(txtvalue);
        jSlider6.setValue(t);
    }//GEN-LAST:event_fieldScaleActionPerformed

    private void jSlider6MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider6MouseDragged
       
        int n = jSlider6.getValue();
       
        fieldScale.setText(""+n);
    }//GEN-LAST:event_jSlider6MouseDragged

    
    
    
    /**
     * Call setElements() method, then do a copy of slideList 
     * to actualisate slides title in menu, and then, dispose().
     * @param evt 
     */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String message  = "Vous Confirmez l'enregistrement ?";
        
        String title = "Enregistrer";
        
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        
        if (reply == JOptionPane.YES_OPTION)
        {           
            
            
            Progress P = new Progress();
            
            this.setElements(); 

            iProject.newSlideList = iProject.slideList; 
            
           
                dispose();                       
            
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        
        String message  = "Souhaitez-vous vraiment fermer ?";
        
        String title = "Annuler";
        
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        
        if (reply == JOptionPane.YES_OPTION)
        {           
           
            
            dispose();                    
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    
    //--------------------BRACKETS-------------------------------------------//
    /**
     * 
     * @param evt 
     */
    private void jTextArea1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseReleased
         // TODO add your handling code here:
        if(jTextArea1.getSelectedText() != null){
         
            jComboBox1.setVisible(true);
            
            btnInfo.setVisible(true);
        
        }
        else{
            
            jComboBox1.setVisible(false);
            
            btnInfo.setVisible(false);
            
        }
    }//GEN-LAST:event_jTextArea1MouseReleased
    /**
     * 
     * @param evt 
     */
    private void jTextArea1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyPressed
        
        if((evt.getModifiers()==KeyEvent.CTRL_MASK)) {
        
            selectedtext = jTextArea1.getSelectedText();            
            
            if(jTextArea1.getSelectedText() != null) {                
            
                jComboBox1.setVisible(true);
               
                btnInfo.setVisible(true);
            
            }
            
            else{ 
            
                jComboBox1.setVisible(false);
                
                btnInfo.setVisible(false);
                
            }
        }
    }//GEN-LAST:event_jTextArea1KeyPressed
    /**
     * 
     * @param evt 
     */
    private void btnInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfoActionPerformed
        
        JOptionPane.showMessageDialog(null, "Séléctionner votre texte à l'aide de la souris pour afficher la liste des balises, \n"
                + "ou séléctionnez à l'aide du clavier puis pressez la touche 'Ctrl'.\n "
                + "\n"
                +"Pour insérer une Police, chercher un police conforme à google puis entrer le nom de la police dans le champs 'Police'.");
    }//GEN-LAST:event_btnInfoActionPerformed
    /**
     * 
     * @param evt 
     */
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
            
        int n = jComboBox1.getSelectedIndex();
            
        Brackets brackets = new Brackets();
            
        selectedtext = brackets.doBrackets(n, selectedtext);
            
        jTextArea1.replaceSelection(selectedtext);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        
        String txtvalue = jTextField1.getText();
        
        int t = Integer.parseInt(txtvalue);
        
        jSlider7.setValue(t);
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jSlider7MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider7MouseDragged
        
        int n = jSlider7.getValue();
       
        jTextField1.setText(""+n);
        
    }//GEN-LAST:event_jSlider7MouseDragged

    /**
     *  CHoose image.
     * @param evt 
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        iChooserImg image = new iChooserImg(new javax.swing.JFrame(), true);
        
        image.addWindowListener(new java.awt.event.WindowAdapter() {
                   
            @Override
        
            public void windowClosing(java.awt.event.WindowEvent e) {
            
                dispose();
           
            }
       
        });
       
        image.setVisible(true);  
       
        String chaine = image.file.getAbsolutePath();
              
        String c [] = chaine.split("/");
       
        int n = c.length;
       
        String filename = c[n-1];       
              
        File src = new File(chaine);
       
        File dest = new File(iProject.desktop+"/Dys_projects/"+iProject.iprojectName+"/img/" + filename); 
       
        try {
        
            CopyDirectory.copyFolder(src, dest);
       
        } 
        catch (IOException ex) {
        
            Logger.getLogger(iSlideForm.class.getName()).log(Level.SEVERE, null, ex);
        
        }        
       
        img = filename;
        
        iSlideForm.backstate = true;
               
    }//GEN-LAST:event_jButton2ActionPerformed
        
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        this.colorChooser  = JColorChooser.showDialog(this, iProject.iprojectName, colorChooser); // Créer la fenetre de choix de couleur
        
        try{
                        
            this.R = this.colorChooser.getRed(); this.G = this.colorChooser.getGreen(); this.B = this.colorChooser.getBlue(); // récupère les valeurs choisies en RGB
                                              
            
        }catch(NullPointerException e){
            
            System.out.println("ERROR NULL POINTER :");
            
            System.out.println(e);
        }
        
        bg = "rgb("+this.R+","+this.G+","+this.B+")"; 
        
        iSlideForm.backstate = false;
        
    }//GEN-LAST:event_jButton1ActionPerformed


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnInfo;
    private javax.swing.JButton btnSave;
    private javax.swing.JTextField fieldPosX;
    private javax.swing.JTextField fieldPosY;
    private javax.swing.JTextField fieldRotaX;
    private javax.swing.JTextField fieldRotaY;
    private javax.swing.JTextField fieldRotate;
    private javax.swing.JTextField fieldScale;
    private javax.swing.JTextField fieldSlideTitle;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JSlider jSlider4;
    private javax.swing.JSlider jSlider5;
    private javax.swing.JSlider jSlider6;
    private javax.swing.JSlider jSlider7;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel titre;
    // End of variables declaration//GEN-END:variables

    
    
    
    
    private void setElements() {           
            
            ImpressSlide islide = new ImpressSlide();
            
            islide.id =  jTextField2.getText();
            
            islide.name= iProject.iprojectName;
            
            islide.title=fieldSlideTitle.getText();
            
            islide.text= jTextArea1.getText();            
            
            if(jComboBox2.getSelectedIndex() > 0){
            
                islide.time = jComboBox2.getSelectedItem().toString();
            
            }
            
            else{
            
                islide.time="3000";
            
            }
            
            if(jCheckBox1.isSelected())islide.play="true";
            
            else{islide.play="false";}
            
            islide.posX=fieldPosX.getText();
            
            islide.posY=fieldPosY.getText();
            
            islide.posZ=jTextField1.getText();
            
            islide.rotate=fieldRotate.getText();
            
            islide.rotateX=fieldRotaX.getText();
            
            islide.rotateY=fieldRotaY.getText();
            
            if(iSlideForm.backstate==false)islide.bkground=bg;
            
            if(iSlideForm.backstate==true)islide.image=img;
                        
            islide.scale=fieldScale.getText();
            
            islide.theme = iProject.getThemeName();                        

            iProject.add(islide);                                                                  
               
            WriteContentHtml();
    }

    private void WriteContentHtml() {
         try{                                           
           
            iWriteFile wfContent = new iWriteFile();             
                        
            wfContent.wfAllContent(iProject.slideList);              
            
            Progress P = new Progress();
            
            
            
        }
        catch(Exception e){  JOptionPane.showMessageDialog(this, e);}
    }
    
    
    
    
}
